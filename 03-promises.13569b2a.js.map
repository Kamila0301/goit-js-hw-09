{"mappings":"YAEA,IAAMA,EAAeC,SAASC,cAAc,SAC5CF,EAAaG,iBAAiB,UAE9B,SAAsBC,GACpBA,EAAMC,iBACN,IAAK,IAAIC,EAAI,EAAGA,GAAKN,EAAaO,OAAOC,MAAOF,IAE5CG,OAAOT,EAAaU,MAAMF,OAC1BC,OAAOT,EAAaW,KAAKH,QAG7B,SAAuBI,EAAUF,GACTG,KAAKC,SAAW,GAEpCC,QAAQ,uBAAwCC,OAAfJ,EAAS,QAAYI,OAANN,EAAM,OAEpDO,OAAK,sBAAuCD,OAAfJ,EAAS,QAAYI,OAANN,EAAM,M,EAIxDQ,CAAcC,EAAGT,OACdU,MAAK,SAAAC,G,IAAGT,EAAQS,EAART,SAAUU,EAAKD,EAALX,MACjBa,QAAQC,IAAI,uBAAwCR,OAAfJ,EAAS,QAAYI,OAANM,EAAM,M,IAE3DG,OAAM,SAAAJ,G,IAAGT,EAAQS,EAART,SAAUU,EAAKD,EAALX,MAClBa,QAAQC,IAAI,sBAAqCR,OAAfJ,EAAS,QAAYI,OAANM,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["\n\nconst promisesForm = document.querySelector('.form');\npromisesForm.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  for (let i = 1; i <= promisesForm.amount.value; i++) {\n    let delay =\n      Number(promisesForm.delay.value) +\n      Number(promisesForm.step.value) * (i - 1);\n  }\n\n  function createPromise(position, delay) {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    } else {\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }\n  }\n\n  createPromise(i, delay)\n    .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["$ce04d3a99e08e73b$var$promisesForm","document","querySelector","addEventListener","event","preventDefault","_$i","amount","value","Number","delay","step","position","Math","random","resolve","concat","reject","createPromise","i","then","param","_$delay","console","log","catch"],"version":3,"file":"03-promises.13569b2a.js.map"}